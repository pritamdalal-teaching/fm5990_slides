knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
df_put_hist <-
df_option_history %>%
filter(underlying == "SPY") %>%
filter(expiration == "2013-09-21") %>%
filter(trade_date >= "2013-09-11") %>%
filter(type == "put") %>%
filter(strike == 169) %>%
arrange(trade_date) %>%
#select(trade_date, underlying, type, expiration, strike, upx, bid, ask)
select(trade_date, bid, ask)
df_option_history <- read_csv("data_practice_option_history.csv")
df_put_hist <-
df_option_history %>%
filter(underlying == "SPY") %>%
filter(expiration == "2013-09-21") %>%
filter(trade_date >= "2013-09-11") %>%
filter(type == "put") %>%
filter(strike == 169) %>%
arrange(trade_date) %>%
#select(trade_date, underlying, type, expiration, strike, upx, bid, ask)
select(trade_date, bid, ask)
df_option_history
df_option_history %>%
filter(underlying == "SPY") %>%
filter(expiration == "2013-09-21") %>%
filter(trade_date >= "2013-09-11") %>%
filter(type == "put") %>%
filter(strike == 169) %>%
arrange(trade_date) %>%
#select(trade_date, underlying, type, expiration, strike, upx, bid, ask)
select(trade_date, bid, ask)
library(tidyverse)
df_option_history %>%
filter(underlying == "SPY") %>%
filter(expiration == "2013-09-21") %>%
filter(trade_date >= "2013-09-11") %>%
filter(type == "put") %>%
filter(strike == 169) %>%
arrange(trade_date) %>%
#select(trade_date, underlying, type, expiration, strike, upx, bid, ask)
select(trade_date, bid, ask)
library(tidyverse)
df_option_history <- read_csv("data_practice_option_history.csv")
df_put_hist <-
df_option_history %>%
filter(underlying == "SPY") %>%
filter(expiration == "2013-09-21") %>%
filter(trade_date >= "2013-09-11") %>%
filter(type == "put") %>%
filter(strike == 169) %>%
arrange(trade_date) %>%
#select(trade_date, underlying, type, expiration, strike, upx, bid, ask)
select(trade_date, bid, ask)
df_option_history %>%
filter(underlying == "SPY")
df_option_history
df_option_history %>%
dplyr::filter(underlying == "SPY")
library(tidyverse)
library(dplyr)
df_put_hist <-
df_option_history %>%
filter(underlying == "SPY") %>%
filter(expiration == "2013-09-21") %>%
filter(trade_date >= "2013-09-11") %>%
filter(type == "put") %>%
filter(strike == 169) %>%
arrange(trade_date) %>%
#select(trade_date, underlying, type, expiration, strike, upx, bid, ask)
select(trade_date, bid, ask)
library(tidyverse)
library(dplyr)
df_option_history <- read_csv("data_practice_option_history.csv")
df_put_hist <-
df_option_history %>%
dplyr::filter(underlying == "SPY") %>%
dplyr::filter(expiration == "2013-09-21") %>%
dplyr::filter(trade_date >= "2013-09-11") %>%
dplyr::filter(type == "put") %>%
dplyr::filter(strike == 169) %>%
arrange(trade_date) %>%
#select(trade_date, underlying, type, expiration, strike, upx, bid, ask)
select(trade_date, bid, ask)
df_put_hist
df_put_hist %>% mutate(D_i = 0, C_i = 0)
df_put_hist <-
df_put_hist %>%
mutate(D_i = 0, C_i = 0)
df_put_hist
df_put_hist <-
df_put_hist %>%
mutate(D_i = 0, C_i = 0)
for (ix_date in 1:nrow(df_put_hist)){
if (ix_date == 1) {df_put_hist$D_i[ix_date] < df_put_hist$bid[ix_date] - df_put_hist$ask[ix_date]}
else {df_put_hist$D_i[ix_date] <- df_put_hist$ask[ix_date] - df_put_hist$ask[ix_date - 1]}
df_put_hist$C_i[ix_date] = sum(df_put_hist$D_i[1:ix_date])
}
df_put_hist
df_put_hist <-
df_put_hist %>%
mutate(D_i = 0, C_i = 0)
for (ix_date in 1:nrow(df_put_hist)){
if (ix_date == 1) {df_put_hist$D_i[ix_date] <- df_put_hist$bid[ix_date] - df_put_hist$ask[ix_date]}
else {df_put_hist$D_i[ix_date] <- df_put_hist$bid[ix_date] - df_put_hist$bid[ix_date - 1]}
df_put_hist$C_i[ix_date] = sum(df_put_hist$D_i[1:ix_date])
}
df_put_hist
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
type = "c"
upx = seq(90, 105, 1)
strike = 100
time = c(21, 10, 5, 1)
rf = 0.01
div = 0
vol = 0.25
df_graph_data <- tibble(
desc = "intrinsic"
, upx = upx
, value = map_dbl(upx, function(x) max(x - strike, 0))
)
library(fOptions)
library(bizdays)
library(tidyverse)
library(gridExtra)
type = "c"
upx = seq(90, 105, 1)
strike = 100
time = c(21, 10, 5, 1)
rf = 0.01
div = 0
vol = 0.25
df_graph_data <- tibble(
desc = "intrinsic"
, upx = upx
, value = map_dbl(upx, function(x) max(x - strike, 0))
)
for (ix_time in 1: length(time)){
## for ix_time start ##########
option_values <-
GBSCharacteristics(
TypeFlag = type
, S = upx
, X = strike
, Time = time[ix_time]/252
, r = rf
, b = div
, sigma = vol
)
df_add_values <- tibble(
desc = as.character(time[ix_time])
, upx = upx
, value = option_values$premium
)
df_graph_data <-
bind_rows(df_graph_data, df_add_values)
## for ix_time end ############
}
# this is the plot mothafucka
ggplot() +
geom_line(
data = df_graph_data %>% filter(desc != "intrinsic")
, aes(x = upx, y = value, color = desc)
) +
scale_color_discrete(
name = "trade days\nto expiration"
, breaks = c("21", "10", "5", "1")
, labels = c("21", "10", "05", "01")
) +
geom_line(
data = df_graph_data %>% filter(desc == "intrinsic")
, aes(x = upx, y = value)
, size = 0.75
) +
theme(legend.position = c(0.15,0.65)) +
labs(
title = "The Effect of Time on Option Value"
, x = "underlying price"
, y = "option price"
)
library(fOptions)
library(bizdays)
library(tidyverse)
library(gridExtra)
type = "c"
upx = seq(90, 105, 1)
strike = 100
time = c(21, 10, 5, 1)
rf = 0.01
div = 0
vol = 0.25
df_graph_data <- tibble(
desc = "intrinsic"
, upx = upx
, value = map_dbl(upx, function(x) max(x - strike, 0))
)
for (ix_time in 1: length(time)){
## for ix_time start ##########
option_values <-
GBSCharacteristics(
TypeFlag = type
, S = upx
, X = strike
, Time = time[ix_time]/252
, r = rf
, b = div
, sigma = vol
)
df_add_values <- tibble(
desc = as.character(time[ix_time])
, upx = upx
, value = option_values$premium
)
df_graph_data <-
bind_rows(df_graph_data, df_add_values)
## for ix_time end ############
}
# this is the plot mothafucka
ggplot() +
geom_line(
data = df_graph_data %>% filter(desc != "intrinsic")
, aes(x = upx, y = value, color = desc)
) +
scale_color_discrete(
name = "trade days\nto expiration"
, breaks = c("21", "10", "5", "1")
, labels = c("21", "10", "05", "01")
) +
geom_line(
data = df_graph_data %>% filter(desc == "intrinsic")
, aes(x = upx, y = value)
, size = 0.75
) +
theme(legend.position = c(0.15,0.65)) +
labs(
title = "The Effect of Time on Option Value"
, x = "underlying price"
, y = "option price"
)
df_graph_data %>% filter(desc != "intrinsic")
library(fOptions)
library(bizdays)
library(tidyverse)
library(gridExtra)
type = "c"
upx = seq(90, 105, 1)
strike = 100
time = c(21, 10, 5, 1)
rf = 0.01
div = 0
vol = 0.25
df_graph_data <- tibble(
desc = "0"
, upx = upx
, value = map_dbl(upx, function(x) max(x - strike, 0))
)
for (ix_time in 1: length(time)){
## for ix_time start ##########
option_values <-
GBSCharacteristics(
TypeFlag = type
, S = upx
, X = strike
, Time = time[ix_time]/252
, r = rf
, b = div
, sigma = vol
)
df_add_values <- tibble(
desc = as.character(time[ix_time])
, upx = upx
, value = option_values$premium
)
df_graph_data <-
bind_rows(df_graph_data, df_add_values)
## for ix_time end ############
}
# this is the plot mothafucka
ggplot() +
geom_line(
data = df_graph_data %>% filter(desc != "0")
, aes(x = upx, y = value, color = desc)
) +
scale_color_discrete(
name = "trade days\nto expiration"
, breaks = c("21", "10", "5", "1")
, labels = c("21", "10", "05", "01")
) +
geom_line(
data = df_graph_data %>% filter(desc == "0")
, aes(x = upx, y = value)
, size = 0.75
) +
theme(legend.position = c(0.15,0.65)) +
labs(
title = "The Effect of Time on Option Value"
, x = "underlying price"
, y = "option price"
)
library(fOptions)
library(bizdays)
library(tidyverse)
library(gridExtra)
type = "c"
upx = seq(90, 105, 1)
strike = 100
time = 21/252
rf = 0.01
div = 0
vol = seq(0.10, 0.30, 0.05)
df_graph_data <- tibble(
vol = 0
, upx = upx
, value = map_dbl(upx, function(x) max(x - strike, 0))
)
for (ix_vol in 1: length(vol)){
## for ix_vol start ##########
option_values <-
GBSCharacteristics(
TypeFlag = type
, S = upx
, X = strike
, Time = time
, r = rf
, b = div
, sigma = vol[ix_vol]
)
df_add_values <- tibble(
vol = vol[ix_vol]
, upx = upx
, value = option_values$premium
)
df_graph_data <-
bind_rows(df_graph_data, df_add_values)
## for ix_time end ############
}
# this is the plot mothafucka
ggplot() +
geom_line(
data = df_graph_data %>% dplyr::filter(vol != 0)
, aes(x = upx, y = value, color = factor(desc(vol)))
) +
scale_color_discrete(
name = "volatility"
# , breaks = c("21", "10", "5", "1")
, labels = c("0.30", "0.25", "0.20", "0.15", "0.10")
) +
geom_line(
data = df_graph_data %>% dplyr::filter(vol == 0)
, aes(x = upx, y = value)
, size = 0.75
) +
theme(legend.position = c(0.15,0.65)) +
labs(
title = "The Effect of Volatility on Option Value"
, x = "underlying price"
, y = "option price"
)
library(fOptions)
library(bizdays)
library(tidyverse)
library(gridExtra)
type = "c"
upx = seq(90, 110, 1)
strike = 100
time = 21/252
rf = 0.01
div = 0
vol = 0.25
option_values <-
GBSCharacteristics(
TypeFlag = type
, S = upx
, X = strike
, Time = time
, r = rf
, b = div
, sigma = vol
)
graph_values <-
tibble(
upx = upx
, intrinsic = map_dbl(upx, function(x) max(x - strike, 0))
, px = option_values$premium
, delta = option_values$delta
, vega = option_values$vega / 100
, theta = option_values$theta / 252
)
p1 <-
ggplot(data = graph_values ) +
geom_line(aes(x = upx, y = intrinsic), size = 0.75) +
geom_line(aes(x = upx, y = px), color = "green4") +
geom_vline(xintercept = 100, color = "red", lty = "dashed") +
labs(
x = ""
,y = ""
) +
annotate("text", label = "option price" , x = 93, y = 9.99, size = 4, colour = "black")
p2 <-
ggplot(data = graph_values ) +
geom_line(aes(x = upx, y = delta), color = "blue") +
geom_vline(xintercept = 100, color = "red", lty = "dashed") +
labs(
x = ""
, y = ""
) +
annotate("text", label = "delta" , x = 91.5, y = 0.875, size = 4, colour = "black")
p3 <-
ggplot(data = graph_values ) +
geom_line(aes(x = upx, y = vega), color = "orange") +
geom_vline(xintercept = 100, color = "red", lty = "dashed") +
labs(
x = "underlying price"
, y = ""
) +
annotate("text", label = "vega" , x = 91.5, y = .11, size = 4, colour = "black")
p4 <-
ggplot(data = graph_values ) +
geom_line(aes(x = upx, y = theta), color = "pink") +
geom_vline(xintercept = 100, color = "red", lty = "dashed") +
labs(
x = "underlying price"
, y = ""
) +
annotate("text", label = "theta" , x = 93, y = -0.025, size = 4, colour = "black")
gridExtra::grid.arrange(p1, p2, p3, p4
, nrow = 2
, top = "Greeks vs Underlying Price")
knitr::opts_chunk$set(echo = TRUE)
x <- rnorm(100)
mean(x)
sd(x)
library(bizdays)
bizdays::load_rmetrics_calendars(2008:2019)
bizdays(
as.Date("2013-08-23"),
as.Date("2013-09-20")
)
bizdays(
as.Date("2013-08-23"),
as.Date("2013-09-20"),
'Rmetrics/NYSE'
)
bizseq(
as.Date("2013-08-23"),
as.Date("2013-09-20"),
'Rmetrics/NYSE'
)
bizseq(
as.Date("2013-08-23"),
as.Date("2013-09-20"),
'Rmetrics/NYSE'
) %>% length()
bizseq(
as.Date("2013-08-23"),
as.Date("2013-09-20"),
'Rmetrics/NYSE'
) %>% length()
library(tidyverse)
bizseq(
as.Date("2013-08-23"),
as.Date("2013-09-20"),
'Rmetrics/NYSE'
) %>% length()
bizdays(
as.Date("2013-08-23"),
as.Date("2013-09-20"),
'Rmetrics/NYSE'
)
bizseq(
as.Date("2013-08-23"),
as.Date("2013-09-20"),
'Rmetrics/NYSE'
) %>% length()
bizdays(
as.Date("2013-08-23"),
as.Date("2013-09-24"),
'Rmetrics/NYSE'
)
bizdays(
as.Date("2013-08-23"),
as.Date("2013-08-24"),
'Rmetrics/NYSE'
)
bizseq(
as.Date("2013-08-23"),
as.Date("2013-09-20"),
'Rmetrics/NYSE'
)
.Library
library()
.libPaths()
knitr::opts_chunk$set(echo = FALSE)
.libPaths() # get library location
library()   # see all packages installed
search()    # see packages currently loaded
.libPaths() # get library location
library()   # see all packages installed
search()    # see packages currently loaded
packageDescription("dplyr")
.libPaths()
.Library
library()
search()
library(dplyr)
search()
help(zoo::rollapply)
help("zoo::rollapply")
library(zoo)
help("rollapply")
